def +: (self: Int, other: Int) -> Int = llvm {
  %1 = add nsw i32 %other, %self
  ret i32 %1
}

def foo = { fn: (x: Int) -> Int, x: Int ->
  fn(x)
}: Int

def main = {
  val fn = \i: Int -> i + 1
  val a = foo(\i -> i + 1, 1)
  val b = foo({ i -> i + 1 }, 2)
  val c = foo(fn, 3)

  fn(0) + c + a + b
}: Int