import abra.complex with Complex enhance Int, Float

def c1 = 1.i + 5.j

def bar = { lambda: (Complex) -?> Float, x: Int -?>
    val a = io.readInt()?
    val b = resque io.readInt()
        of IOErr(msg, code) -> { io.println(msg); 0 }
        of otherwise -> raise otherwise # rethrow exception

    lambda(a.i + b.j)?
}: Float


import abra.sh
import abra.io
import abra.kadabra
import abra.shell

def main =
    resque shell.eval(seq.of(
        Task('run', { ctx ->
            val line = io.readLine?
            if line == 'xxx' then sh.mkDir('dir')?

        }),
        Task('compile', { ctx ->
            kadabra.compile('src/main.abra')?
        })
    ))
        of None -> 'ok'.print
        of err: NoSuchTaskErr -> 'task not found ${err.name}'.printErr
        of other -> 'task failed\n ${other.trace}'