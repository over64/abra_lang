import
    /universe with None, Bool, Int, String, Float
    /vec with Vec
    /array with Array
    /range with Range
    /sreader
    /io .

def load = fname: String do
  objFile = io.fopen(fname, 'r')

  vertexBuff:  Vec[Float] = vec.make(32)
  textureBuff: Vec[Float] = vec.make(32)
  normalBuff:  Vec[Float] = vec.make(32)
  meshBuff:    Vec[Float] = vec.make(32)

  objFile.iter with io.NL(), line ->
    reader = sreader.of(line)

    if line.startsWith('v ') do
      reader.drop('v '.len())
      3.times(-> vertexBuff.push(reader.float())) . -- x y z

    if line.startsWith('vt ') do
      reader.drop('vt '.len())
      2.times(-> textureBuff.push(reader.float())) . --u v

    if line.startsWith('vn ') do
      reader.drop('vn '.len())
      3.times(-> normalBuff.push(reader.float())) . -- nx ny nz

    if line.startsWith('f ') do
      reader.drop('f '.len())
      3 times ->
        vertexId = reader.readInt() - 1
        (0 to 3).forEach with i ->
          meshBuff.push(vertexBuff(vertexId * 3 + i)) . -- x y z
        reader.drop('/'.len())

        uvId = reader.readInt() - 1
        (0 to 2).forEach with i ->
          meshBuff.push(textureBuff(uvId * 2 + i)) . -- u v
        reader.drop('/'.len())

        normalId = reader.readInt() - 1
        (0 to 3).forEach with i ->
          meshBuff.push(normalBuff(normalId * 3 + i)) .... -- nx ny nz

    io.fclose(objFile)
    meshBuff.array .