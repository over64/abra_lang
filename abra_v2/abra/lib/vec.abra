import
    /universe with None, Bool, Int
    /array with Array .

type Vec[t] = (array: Array[t], len: Int)

def get = self: Vec[t], index: Int do
    #FIXME: should be self.array(index)?
    self.array.get(index) .

def set = self: Vec[t], index: Int, value: t do
    self.array.set(index, value) .

def push = self: Vec[t], value: t do
    if self.len >= self.array.len() do
        newArray: Array[t] = array.alloc(self.array.len() * 2)
        array.copy(self.array, newArray, 0, 0, self.array.len())
        self.array = newArray .

    self.array(self.len) = value
    self.len = self.len + 1 .

def mk = size: Int do
    Vec(array.alloc(size), 0) .Vec[t]