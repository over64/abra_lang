type None = llvm void .
type Bool = llvm i8 .
type Int  = llvm i32 .
type Long = llvm i64 .
type String = ref llvm i8* .
type Ptr = llvm i8* .

def + = self: Int, other: Int do llvm
  %1 = add nsw i32 %self, %other
  ret i32 %1 .Int

def - = self: Int, other: Int do llvm
  %1 = sub nsw i32 %self, %other
  ret i32 %1 .Int

def > = self: Int, other: Int do llvm
  %1 = icmp sgt i32 %self, %other
  %2 = zext i1 %1 to i8
  ret i8 %2 .Bool

def < = self: Int, other: Int do llvm
  %1 = icmp slt i32 %self, %other
  %2 = zext i1 %1 to i8
  ret i8 %2 .Bool

def shl = self: Int, shift: Int do llvm
  %1 = shl i32 %self, %shift
  ret i32 %1 .Int

def toLong = self: Int do llvm
  %1 = zext i32 %self to i64
  ret i64 %1 .Long

def + = self: Long, other: Long do llvm
  %1 = add nsw i64 %self, %other
  ret i64 %1 .Long

def >= = self: Long, other: Long do llvm
  %1 = icmp sge i64 %self, %other
  %2 = zext i1 %1 to i8
  ret i8 %2 .Bool

def <= = self: Long, other: Long do llvm
  %1 = icmp sle i64 %self, %other
  %2 = zext i1 %1 to i8
  ret i8 %2 .Bool