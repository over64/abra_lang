def + = \self: Int, other: Int -> llvm
  %1 = add nsw i32 %self, %other
  ret i32 %1
.Int

type Bar = (x: Int, y: Int)
type Foo = (x: Int, bar: Bar)

def baz = \bar: Bar -> .Nil

def main =
    val foobar = Foo(1, Bar(1, 1))
    baz(foobar.bar)
    foobar.x + foobar.bar.x + foobar.bar.y . # 3 expected