type Tree[T] = (
    v: T,
    l: &Tree[T] | None,
    r: &Tree[T] | None)

def main = ->
    let root: Tree @ rc = Tree(v = 0, l = None, r = None) @ rc
    let l = Tree(1, None, None)
    root.l = &l # error: expected &Tree[Int] @ rc has &Tree[Int] @ stack
end